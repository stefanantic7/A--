#include<stdio.h>
#inlucde<math.h>
int a = 5-9*(3+7)/4, b=5;
int x;
int main(int a, int abc){
}
a=4;
main()


use cget, cput;
use cast_to;

dec $pol: string = @cget("Unesite pol:");
dec $visina: int = @cast_to(@cget("Unesite Vasu visinu:"), "int");
dec $idealna_kilaza: int = 0;

cond($pol == "m") {
   $idealna_kilaza = $visina - 100;
}
cond($pol == "f") {
   $idealna_kilaza = $visina - 120;
}

@cput("Vasa idealna kilaza je:".@cast_to($idealna_kilaza, "string"));




##
not(5+3 > 5+10) and not(1==1)
dec $b_2: boolean = !(1<2) && (1<3);


dec $a: int = 5+3*5;
dec $slanina: string = " i slaninu";
dec $stringic: string = "pera jede jaja".$slanina.", a voli i kupus";
dec $b: float = 3.4+$a;

dec $bool_t: boolean = !(1>(2+3)*3) && !(1==1);
dec $b_2: boolean = !(1<2) && (1<3);
dec $b_3: boolean = !(5+3 > 5+10) && !(1==1);



use cget, cput;
use cast_to;

dec $broj1: int = 1;
dec $broj2: int = 1+5;

decfun solve($n1:int, $n2:int): int {
    dec $broj1: int = 2;
    return $b;
}

dec $broj2: int = @solve($broj1, $broj2) + 5;

dec $str_str: string = "string";
dec $str: string = "pera: ".@cast_to($broj2, $str_str);






use cget, cput;
use cast_to;

decfun solve($n:int): do {
    dec $s1: string = "cao ";
    dec $s2: string = $s1."Pero!";

    loond((1 < (2+3)*3) && !(1!=1)) {
        dec $aL: int = 5+3*5;
        cond( 1 == 2 ){
            dec $aC: int = 5+3*5;
            loond(1 < 2) {
                dec $aL: int = 5+3*5;
            }
        }
    }

}

@solve();
##